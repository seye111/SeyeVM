#include "InstructionSet.hpp"

#include "../Exception.hpp"

namespace Jvm{

	void i_nop(ExecutionContext & context);
	void i_aconst_null(ExecutionContext & context);
	void i_iconst_m1(ExecutionContext & context);
	void i_iconst_0(ExecutionContext & context);
	void i_iconst_1(ExecutionContext & context);
	void i_iconst_2(ExecutionContext & context);
	void i_iconst_3(ExecutionContext & context);
	void i_iconst_4(ExecutionContext & context);
	void i_iconst_5(ExecutionContext & context);
	void i_lconst_0(ExecutionContext & context);
	void i_lconst_1(ExecutionContext & context);
	void i_fconst_0(ExecutionContext & context);
	void i_fconst_1(ExecutionContext & context);
	void i_fconst_2(ExecutionContext & context);
	void i_dconst_0(ExecutionContext & context);
	void i_dconst_1(ExecutionContext & context);
	void i_bipush(ExecutionContext & context);
	void i_sipush(ExecutionContext & context);
	void i_ldc(ExecutionContext & context);
	void i_ldc_w(ExecutionContext & context);
	void i_ldc2_w(ExecutionContext & context);
	void i_iload(ExecutionContext & context);
	void i_lload(ExecutionContext & context);
	void i_fload(ExecutionContext & context);
	void i_dload(ExecutionContext & context);
	void i_aload(ExecutionContext & context);
	void i_iload_0(ExecutionContext & context);
	void i_iload_1(ExecutionContext & context);
	void i_iload_2(ExecutionContext & context);
	void i_iload_3(ExecutionContext & context);
	void i_lload_0(ExecutionContext & context);
	void i_lload_1(ExecutionContext & context);
	void i_lload_2(ExecutionContext & context);
	void i_lload_3(ExecutionContext & context);
	void i_fload_0(ExecutionContext & context);
	void i_fload_1(ExecutionContext & context);
	void i_fload_2(ExecutionContext & context);
	void i_fload_3(ExecutionContext & context);
	void i_dload_0(ExecutionContext & context);
	void i_dload_1(ExecutionContext & context);
	void i_dload_2(ExecutionContext & context);
	void i_dload_3(ExecutionContext & context);
	void i_aload_0(ExecutionContext & context);
	void i_aload_1(ExecutionContext & context);
	void i_aload_2(ExecutionContext & context);
	void i_aload_3(ExecutionContext & context);
	void i_iaload(ExecutionContext & context);
	void i_laload(ExecutionContext & context);
	void i_faload(ExecutionContext & context);
	void i_daload(ExecutionContext & context);
	void i_aaload(ExecutionContext & context);
	void i_baload(ExecutionContext & context);
	void i_caload(ExecutionContext & context);
	void i_saload(ExecutionContext & context);
	void i_istore(ExecutionContext & context);
	void i_lstore(ExecutionContext & context);
	void i_fstore(ExecutionContext & context);
	void i_dstore(ExecutionContext & context);
	void i_astore(ExecutionContext & context);
	void i_istore_0(ExecutionContext & context);
	void i_istore_1(ExecutionContext & context);
	void i_istore_2(ExecutionContext & context);
	void i_istore_3(ExecutionContext & context);
	void i_lstore_0(ExecutionContext & context);
	void i_lstore_1(ExecutionContext & context);
	void i_lstore_2(ExecutionContext & context);
	void i_lstore_3(ExecutionContext & context);
	void i_fstore_0(ExecutionContext & context);
	void i_fstore_1(ExecutionContext & context);
	void i_fstore_2(ExecutionContext & context);
	void i_fstore_3(ExecutionContext & context);
	void i_dstore_0(ExecutionContext & context);
	void i_dstore_1(ExecutionContext & context);
	void i_dstore_2(ExecutionContext & context);
	void i_dstore_3(ExecutionContext & context);
	void i_astore_0(ExecutionContext & context);
	void i_astore_1(ExecutionContext & context);
	void i_astore_2(ExecutionContext & context);
	void i_astore_3(ExecutionContext & context);
	void i_iastore(ExecutionContext & context);
	void i_lastore(ExecutionContext & context);
	void i_fastore(ExecutionContext & context);
	void i_dastore(ExecutionContext & context);
	void i_aastore(ExecutionContext & context);
	void i_bastore(ExecutionContext & context);
	void i_castore(ExecutionContext & context);
	void i_sastore(ExecutionContext & context);
	void i_pop(ExecutionContext & context);
	void i_pop2(ExecutionContext & context);
	void i_dup(ExecutionContext & context);
	void i_dup_x1(ExecutionContext & context);
	void i_dup_x2(ExecutionContext & context);
	void i_dup2(ExecutionContext & context);
	void i_dup2_x1(ExecutionContext & context);
	void i_dup2_x2(ExecutionContext & context);
	void i_swap(ExecutionContext & context);
	void i_iadd(ExecutionContext & context);
	void i_ladd(ExecutionContext & context);
	void i_fadd(ExecutionContext & context);
	void i_dadd(ExecutionContext & context);
	void i_isub(ExecutionContext & context);
	void i_lsub(ExecutionContext & context);
	void i_fsub(ExecutionContext & context);
	void i_dsub(ExecutionContext & context);
	void i_imul(ExecutionContext & context);
	void i_lmul(ExecutionContext & context);
	void i_fmul(ExecutionContext & context);
	void i_dmul(ExecutionContext & context);
	void i_idiv(ExecutionContext & context);
	void i_ldiv(ExecutionContext & context);
	void i_fdiv(ExecutionContext & context);
	void i_ddiv(ExecutionContext & context);
	void i_irem(ExecutionContext & context);
	void i_lrem(ExecutionContext & context);
	void i_frem(ExecutionContext & context);
	void i_drem(ExecutionContext & context);
	void i_ineg(ExecutionContext & context);
	void i_lneg(ExecutionContext & context);
	void i_fneg(ExecutionContext & context);
	void i_dneg(ExecutionContext & context);
	void i_ishl(ExecutionContext & context);
	void i_lshl(ExecutionContext & context);
	void i_ishr(ExecutionContext & context);
	void i_lshr(ExecutionContext & context);
	void i_iushr(ExecutionContext & context);
	void i_lushr(ExecutionContext & context);
	void i_iand(ExecutionContext & context);
	void i_land(ExecutionContext & context);
	void i_ior(ExecutionContext & context);
	void i_lor(ExecutionContext & context);
	void i_ixor(ExecutionContext & context);
	void i_lxor(ExecutionContext & context);
	void i_iinc(ExecutionContext & context);
	void i_i2l(ExecutionContext & context);
	void i_i2f(ExecutionContext & context);
	void i_i2d(ExecutionContext & context);
	void i_l2i(ExecutionContext & context);
	void i_l2f(ExecutionContext & context);
	void i_l2d(ExecutionContext & context);
	void i_f2i(ExecutionContext & context);
	void i_f2l(ExecutionContext & context);
	void i_f2d(ExecutionContext & context);
	void i_d2i(ExecutionContext & context);
	void i_d2l(ExecutionContext & context);
	void i_d2f(ExecutionContext & context);
	void i_i2b(ExecutionContext & context);
	void i_i2c(ExecutionContext & context);
	void i_i2s(ExecutionContext & context);
	void i_lcmp(ExecutionContext & context);
	void i_fcpl(ExecutionContext & context);
	void i_fcmg(ExecutionContext & context);
	void i_dcmpl(ExecutionContext & context);
	void i_dcmpg(ExecutionContext & context);
	void i_ifeq(ExecutionContext & context);
	void i_ifne(ExecutionContext & context);
	void i_iflt(ExecutionContext & context);
	void i_ifge(ExecutionContext & context);
	void i_ifgt(ExecutionContext & context);
	void i_ifle(ExecutionContext & context);
	void i_if_icmeq(ExecutionContext & context);
	void i_if_icmpne(ExecutionContext & context);
	void i_if_icmplt(ExecutionContext & context);
	void i_if_icmpge(ExecutionContext & context);
	void i_if_icmpgt(ExecutionContext & context);
	void i_if_icmple(ExecutionContext & context);
	void i_if_acmpeq(ExecutionContext & context);
	void i_if_acmpne(ExecutionContext & context);
	void i_goto(ExecutionContext & context);
	void i_jsr(ExecutionContext & context);
	void i_ret(ExecutionContext & context);
	void i_tableswitch(ExecutionContext & context);
	void i_lookupswitch(ExecutionContext & context);
	void i_ireturn(ExecutionContext & context);
	void i_lreturn(ExecutionContext & context);
	void i_freturn(ExecutionContext & context);
	void i_dreturn(ExecutionContext & context);
	void i_areturn(ExecutionContext & context);
	void i_return(ExecutionContext & context);
	void i_getstatic(ExecutionContext & context);
	void i_putstatic(ExecutionContext & context);
	void i_getfield(ExecutionContext & context);
	void i_putfield(ExecutionContext & context);
	void i_invokevirtual(ExecutionContext & context);
	void i_invokespecial(ExecutionContext & context);
	void i_invokestatic(ExecutionContext & context);
	void i_invokeinterface(ExecutionContext & context);
	void i_invokedynamic(ExecutionContext & context);
	void i_new(ExecutionContext & context);
	void i_newarray(ExecutionContext & context);
	void i_anewarray(ExecutionContext & context);
	void i_arraylength(ExecutionContext & context);
	void i_athrow(ExecutionContext & context);
	void i_checkcast(ExecutionContext & context);
	void i_instanceof(ExecutionContext & context);
	void i_monitorenter(ExecutionContext & context);
	void i_monitorexit(ExecutionContext & context);
	void i_wide(ExecutionContext & context);
	void i_multianewarray(ExecutionContext & context);
	void i_ifnull(ExecutionContext & context);
	void i_ifnonnull(ExecutionContext & context);
	void i_goto_w(ExecutionContext & context);
	void i_jsr_w(ExecutionContext & context);
	void i_reserved(ExecutionContext & context);
	void i_invalid_pc(ExecutionContext & context);

	static Instruction instruction_list[] = {
		{"nop", 0, 0, i_nop},
		{"aconst_null", 1, 0, i_aconst_null},
		{"iconst_m1", 2, 0, i_iconst_m1},
		{"iconst_0", 3, 0, i_iconst_0},
		{"iconst_1", 4, 0, i_iconst_1},
		{"iconst_2", 5, 0, i_iconst_2},
		{"iconst_3", 6, 0, i_iconst_3},
		{"iconst_4", 7, 0, i_iconst_4},
		{"iconst_5", 8, 0, i_iconst_5},
		{"lconst_0", 9, 0, i_lconst_0},
		{"lconst_1", 10, 0, i_lconst_1},
		{"fconst_0", 11, 0, i_fconst_0},
		{"fconst_1", 12, 0, i_fconst_1},
		{"fconst_2", 13, 0, i_fconst_2},
		{"dconst_0", 14, 0, i_dconst_0},
		{"dconst_1", 15, 0, i_dconst_1},
		{"bipush", 16, 1, i_bipush},
		{"sipush", 17, 2, i_sipush},
		{"ldc", 18, 1, i_ldc},
		{"ldc_w", 19, 2, i_ldc_w},
		{"ldc2_w", 20, 2, i_ldc2_w},
		{"iload", 21, 1, i_iload},
		{"lload", 22, 1, i_lload},
		{"fload", 23, 1, i_fload},
		{"dload", 24, 1, i_dload},
		{"aload", 25, 1, i_aload},
		{"iload_0", 26, 0, i_iload_0},
		{"iload_1", 27, 0, i_iload_1},
		{"iload_2", 28, 0, i_iload_2},
		{"iload_3", 29, 0, i_iload_3},
		{"lload_0", 30, 0, i_lload_0},
		{"lload_1", 31, 0, i_lload_1},
		{"lload_2", 32, 0, i_lload_2},
		{"lload_3", 33, 0, i_lload_3},
		{"fload_0", 34, 0, i_fload_0},
		{"fload_1", 35, 0, i_fload_1},
		{"fload_2", 36, 0, i_fload_2},
		{"fload_3", 37, 0, i_fload_3},
		{"dload_0", 38, 0, i_dload_0},
		{"dload_1", 39, 0, i_dload_1},
		{"dload_2", 40, 0, i_dload_2},
		{"dload_3", 41, 0, i_dload_3},
		{"aload_0", 42, 0, i_aload_0},
		{"aload_1", 43, 0, i_aload_1},
		{"aload_2", 44, 0, i_aload_2},
		{"aload_3", 45, 0, i_aload_3},
		{"iaload", 46, 0, i_iaload},
		{"laload", 47, 0, i_laload},
		{"faload", 48, 0, i_faload},
		{"daload", 49, 0, i_daload},
		{"aaload", 50, 0, i_aaload},
		{"baload", 51, 0, i_baload},
		{"caload", 52, 0, i_caload},
		{"saload", 53, 0, i_saload},
		{"istore", 54, 1, i_istore},
		{"lstore", 55, 1, i_lstore},
		{"fstore", 56, 1, i_fstore},
		{"dstore", 57, 1, i_dstore},
		{"astore", 58, 1, i_astore},
		{"istore_0", 59, 0, i_istore_0},
		{"istore_1", 60, 0, i_istore_1},
		{"istore_2", 61, 0, i_istore_2},
		{"istore_3", 62, 0, i_istore_3},
		{"lstore_0", 63, 0, i_lstore_0},
		{"lstore_1", 64, 0, i_lstore_1},
		{"lstore_2", 65, 0, i_lstore_2},
		{"lstore_3", 66, 0, i_lstore_3},
		{"fstore_0", 67, 0, i_fstore_0},
		{"fstore_1", 68, 0, i_fstore_1},
		{"fstore_2", 69, 0, i_fstore_2},
		{"fstore_3", 70, 0, i_fstore_3},
		{"dstore_0", 71, 0, i_dstore_0},
		{"dstore_1", 72, 0, i_dstore_1},
		{"dstore_2", 73, 0, i_dstore_2},
		{"dstore_3", 74, 0, i_dstore_3},
		{"astore_0", 75, 0, i_astore_0},
		{"astore_1", 76, 0, i_astore_1},
		{"astore_2", 77, 0, i_astore_2},
		{"astore_3", 78, 0, i_astore_3},
		{"iastore", 79, 0, i_iastore},
		{"lastore", 80, 0, i_lastore},
		{"fastore", 81, 0, i_fastore},
		{"dastore", 82, 0, i_dastore},
		{"aastore", 83, 0, i_aastore},
		{"bastore", 84, 0, i_bastore},
		{"castore", 85, 0, i_castore},
		{"sastore", 86, 0, i_sastore},
		{"pop", 87, 0, i_pop},
		{"pop2", 88, 0, i_pop2},
		{"dup", 89, 0, i_dup},
		{"dup_x1", 90, 0, i_dup_x1},
		{"dup_x2", 91, 0, i_dup_x2},
		{"dup2", 92, 0, i_dup2},
		{"dup2_x1", 93, 0, i_dup2_x1},
		{"dup2_x2", 94, 0, i_dup2_x2},
		{"swap", 95, 0, i_swap},
		{"iadd", 96, 0, i_iadd},
		{"ladd", 97, 0, i_ladd},
		{"fadd", 98, 0, i_fadd},
		{"dadd", 99, 0, i_dadd},
		{"isub", 100, 0, i_isub},
		{"lsub", 101, 0, i_lsub},
		{"fsub", 102, 0, i_fsub},
		{"dsub", 103, 0, i_dsub},
		{"imul", 104, 0, i_imul},
		{"lmul", 105, 0, i_lmul},
		{"fmul", 106, 0, i_fmul},
		{"dmul", 107, 0, i_dmul},
		{"idiv", 108, 0, i_idiv},
		{"ldiv", 109, 0, i_ldiv},
		{"fdiv", 110, 0, i_fdiv},
		{"ddiv", 111, 0, i_ddiv},
		{"irem", 112, 0, i_irem},
		{"lrem", 113, 0, i_lrem},
		{"frem", 114, 0, i_frem},
		{"drem", 115, 0, i_drem},
		{"ineg", 116, 0, i_ineg},
		{"lneg", 117, 0, i_lneg},
		{"fneg", 118, 0, i_fneg},
		{"dneg", 119, 0, i_dneg},
		{"ishl", 120, 0, i_ishl},
		{"lshl", 121, 0, i_lshl},
		{"ishr", 122, 0, i_ishr},
		{"lshr", 123, 0, i_lshr},
		{"iushr", 124, 0, i_iushr},
		{"lushr", 125, 0, i_lushr},
		{"iand", 126, 0, i_iand},
		{"land", 127, 0, i_land},
		{"ior", 128, 0, i_ior},
		{"lor", 129, 0, i_lor},
		{"ixor", 130, 0, i_ixor},
		{"lxor", 131, 0, i_lxor},
		{"iinc", 132, 2, i_iinc},
		{"i2l", 133, 0, i_i2l},
		{"i2f", 134, 0, i_i2f},
		{"i2d", 135, 0, i_i2d},
		{"l2i", 136, 0, i_l2i},
		{"l2f", 137, 0, i_l2f},
		{"l2d", 138, 0, i_l2d},
		{"f2i", 139, 0, i_f2i},
		{"f2l", 140, 0, i_f2l},
		{"f2d", 141, 0, i_f2d},
		{"d2i", 142, 0, i_d2i},
		{"d2l", 143, 0, i_d2l},
		{"d2f", 144, 0, i_d2f},
		{"i2b", 145, 0, i_i2b},
		{"i2c", 146, 0, i_i2c},
		{"i2s", 147, 0, i_i2s},
		{"lcmp", 148, 0, i_lcmp},
		{"fcpl", 149, 0, i_fcpl},
		{"fcmg", 150, 0, i_fcmg},
		{"dcmpl", 151, 0, i_dcmpl},
		{"dcmpg", 152, 0, i_dcmpg},
		{"ifeq", 153, 2, i_ifeq},
		{"ifne", 154, 2, i_ifne},
		{"iflt", 155, 2, i_iflt},
		{"ifge", 156, 2, i_ifge},
		{"ifgt", 157, 2, i_ifgt},
		{"ifle", 158, 2, i_ifle},
		{"if_icmeq", 159, 2, i_if_icmeq},
		{"if_icmpne", 160, 2, i_if_icmpne},
		{"if_icmplt", 161, 2, i_if_icmplt},
		{"if_icmpge", 162, 2, i_if_icmpge},
		{"if_icmpgt", 163, 2, i_if_icmpgt},
		{"if_icmple", 164, 2, i_if_icmple},
		{"if_acmpeq", 165, 2, i_if_acmpeq},
		{"if_acmpne", 166, 2, i_if_acmpne},
		{"goto", 167, 2, i_goto},
		{"jsr", 168, 0, i_jsr},
		{"ret", 169, 1, i_ret},
		{"tableswitch", 170, 100, i_tableswitch},
		{"lookupswitch", 171, 100, i_lookupswitch},
		{"ireturn", 172, 0, i_ireturn},
		{"lreturn", 173, 0, i_lreturn},
		{"freturn", 174, 0, i_freturn},
		{"dreturn", 175, 0, i_dreturn},
		{"areturn", 176, 0, i_areturn},
		{"return", 177, 0, i_return},
		{"getstatic", 178, 2, i_getstatic},
		{"putstatic", 179, 2, i_putstatic},
		{"getfield", 180, 2, i_getfield},
		{"putfield", 181, 2, i_putfield},
		{"invokevirtual", 182, 2, i_invokevirtual},
		{"invokespecial", 183, 2, i_invokespecial},
		{"invokestatic", 184, 2, i_invokestatic},
		{"invokeinterface", 185, 4, i_invokeinterface},
		{"invokedynamic", 186, 4, i_invokedynamic},
		{"new", 187, 2, i_new},
		{"newarray", 188, 1, i_newarray},
		{"anewarray", 189, 2, i_anewarray},
		{"arraylength", 190, 0, i_arraylength},
		{"athrow", 191, 0, i_athrow},
		{"checkcast", 192, 2, i_checkcast},
		{"instanceof", 193, 2, i_instanceof},
		{"monitorenter", 194, 0, i_monitorenter},
		{"monitorexit", 195, 0, i_monitorexit},
		{"wide", 196, 100, i_wide},
		{"multianewarray", 197, 2, i_multianewarray},
		{"ifnull", 198, 2, i_ifnull},
		{"ifnonnull", 199, 2, i_ifnonnull},
		{"goto_w", 200, 4, i_goto_w},
		{"jsr_w", 201, 0, i_jsr_w},
		{"reserved", 202, 0, i_reserved},
		{"invalid_pc", 203, 0, i_invalid_pc}
	};

	InstructionSet::InstructionSet(){
		if(logger.is_debug()) logger.log_debug() << "creating instruction set" << std::endl;
 		instructions = instruction_list;
 		if(logger.is_debug()) logger.log_debug() << "instruction set created" << std::endl;
	}

}